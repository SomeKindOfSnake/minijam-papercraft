[gd_resource type="VisualShader" load_steps=20 format=3 uid="uid://dgkc23y1mw7n0"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_y4hf2"]
parameter_name = "Normal"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_xrl3n"]
output_port_for_preview = 0
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uxuyn"]
output_port_for_preview = 0
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_h63c1"]
parameter_name = "BorderMask"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_pq3rv"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vydjn"]
parameter_name = "Edges"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ednoq"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f3vr1"]
output_port_for_preview = 0
input_name = "front_facing"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ikp1r"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.6, 0.6, 0.6)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_moian"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3g4ad"]
constant = Color(0.84, 0.84, 0.84, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_718tu"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_2vglj"]
parameter_name = "Albedo"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_csoid"]
output_port_for_preview = 0
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_oesdg"]
output_port_for_preview = 0
operator = 8

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_vop74"]
parameter_name = "Metallic"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_qnpo3"]
output_port_for_preview = 0
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wftj3"]
output_port_for_preview = 0
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_qg6w0"]
parameter_name = "Roughness"
texture_type = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D BorderMask : source_color, hint_default_black;
uniform float Edges : hint_range(0, 1) = 0;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D Albedo : source_color;
uniform sampler2D Metallic : source_color, hint_default_black;
uniform sampler2D Roughness : source_color;
uniform sampler2D Normal : source_color, hint_default_black;



void fragment() {
	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(BorderMask, UV);


// FloatParameter:15
	float n_out15p0 = Edges;


// FloatOp:16
	float n_out16p0 = n_out12p0.x * n_out15p0;


// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Albedo, UV);


	vec3 n_out5p0;
// ColorOp:5
	{
		float base = vec3(n_out2p0.xyz).x;
		float blend = vec3(n_out4p0.xyz).x;
		if (base < 0.5) {
			n_out5p0.x = (base * (2.0 * blend));
		} else {
			n_out5p0.x = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out2p0.xyz).y;
		float blend = vec3(n_out4p0.xyz).y;
		if (base < 0.5) {
			n_out5p0.y = (base * (2.0 * blend));
		} else {
			n_out5p0.y = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out2p0.xyz).z;
		float blend = vec3(n_out4p0.xyz).z;
		if (base < 0.5) {
			n_out5p0.z = (base * (2.0 * blend));
		} else {
			n_out5p0.z = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}


// ColorOp:14
	vec3 n_out14p0 = vec3(1.0) - (vec3(1.0) - vec3(n_out16p0)) * (vec3(1.0) - n_out5p0);


// ColorConstant:20
	vec4 n_out20p0 = vec4(0.840000, 0.840000, 0.840000, 1.000000);


// Mix:19
	vec3 n_in19p2 = vec3(0.60000, 0.60000, 0.60000);
	vec3 n_out19p0 = mix(n_out14p0, vec3(n_out20p0.xyz), n_in19p2);


// Input:17
	bool n_out17p0 = FRONT_FACING;


// Mix:21
	vec3 n_out21p0 = mix(n_out19p0, n_out14p0, vec3(n_out17p0 ? 1.0 : 0.0));


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(Metallic, UV);


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(Roughness, UV);


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Normal, UV);


// Output:0
	ALBEDO = n_out21p0;
	METALLIC = n_out7p0.x;
	ROUGHNESS = n_out8p0.x;
	NORMAL_MAP = vec3(n_out11p0.xyz);


}
"
graph_offset = Vector2(-1563.49, -208.933)
modes/cull = 2
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_moian")
nodes/fragment/2/position = Vector2(-2420, -280)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_2vglj")
nodes/fragment/3/position = Vector2(-2760, -60)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_csoid")
nodes/fragment/4/position = Vector2(-2420, -20)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_oesdg")
nodes/fragment/5/position = Vector2(-2060, -200)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_vop74")
nodes/fragment/6/position = Vector2(-980, 560)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_qnpo3")
nodes/fragment/7/position = Vector2(-640, 500)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_wftj3")
nodes/fragment/8/position = Vector2(-60, 580)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture2DParameter_qg6w0")
nodes/fragment/9/position = Vector2(-400, 640)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture2DParameter_y4hf2")
nodes/fragment/10/position = Vector2(-400, 1040)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_xrl3n")
nodes/fragment/11/position = Vector2(-60, 980)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture_uxuyn")
nodes/fragment/12/position = Vector2(-2140, -620)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture2DParameter_h63c1")
nodes/fragment/13/position = Vector2(-2480, -660)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorOp_pq3rv")
nodes/fragment/14/position = Vector2(-1380, -320)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_vydjn")
nodes/fragment/15/position = Vector2(-2040, -920)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_ednoq")
nodes/fragment/16/position = Vector2(-1700, -420)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_f3vr1")
nodes/fragment/17/position = Vector2(-840, 180)
nodes/fragment/19/node = SubResource("VisualShaderNodeMix_ikp1r")
nodes/fragment/19/position = Vector2(-1140, -40)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorConstant_3g4ad")
nodes/fragment/20/position = Vector2(-1400, 100)
nodes/fragment/21/node = SubResource("VisualShaderNodeMix_718tu")
nodes/fragment/21/position = Vector2(-420, -20)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 6, 0, 7, 2, 7, 0, 0, 2, 9, 0, 8, 2, 8, 0, 0, 3, 10, 0, 11, 2, 11, 0, 0, 9, 13, 0, 12, 2, 2, 0, 5, 0, 4, 0, 5, 1, 5, 0, 14, 1, 12, 0, 16, 0, 15, 0, 16, 1, 16, 0, 14, 0, 20, 0, 19, 1, 14, 0, 19, 0, 17, 0, 21, 2, 21, 0, 0, 0, 19, 0, 21, 0, 14, 0, 21, 1)
